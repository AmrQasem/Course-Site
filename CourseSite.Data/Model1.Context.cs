//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CourseSite.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CourseSiteEntities : DbContext
    {
        public CourseSiteEntities()
            : base("name=CourseSiteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Cours> Courses { get; set; }
        public virtual DbSet<CoursesVideo> CoursesVideos { get; set; }
        public virtual DbSet<Lesson> Lessons { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<LessonVideo> LessonVideos { get; set; }
    
        public virtual ObjectResult<UserLogin_Result> UserLogin(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserLogin_Result>("UserLogin", emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GetAllCategories_Result> GetAllCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCategories_Result>("GetAllCategories");
        }
    
        public virtual ObjectResult<GetCategoryCourses_Result> GetCategoryCourses(Nullable<int> categoryID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategoryCourses_Result>("GetCategoryCourses", categoryIDParameter);
        }
    
        public virtual ObjectResult<GetCourseDetails_Result> GetCourseDetails(Nullable<int> courseID)
        {
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("CourseID", courseID) :
                new ObjectParameter("CourseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCourseDetails_Result>("GetCourseDetails", courseIDParameter);
        }
    
        public virtual ObjectResult<GetCourseLesson_Result> GetCourseLesson(Nullable<int> courseID)
        {
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("CourseID", courseID) :
                new ObjectParameter("CourseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCourseLesson_Result>("GetCourseLesson", courseIDParameter);
        }
    
        public virtual ObjectResult<GetLessonVideos_Result> GetLessonVideos(Nullable<int> lessonID)
        {
            var lessonIDParameter = lessonID.HasValue ?
                new ObjectParameter("LessonID", lessonID) :
                new ObjectParameter("LessonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLessonVideos_Result>("GetLessonVideos", lessonIDParameter);
        }
    
        public virtual ObjectResult<GetVideoByCourses_Result> GetVideoByCourses(Nullable<int> courseID)
        {
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("CourseID", courseID) :
                new ObjectParameter("CourseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVideoByCourses_Result>("GetVideoByCourses", courseIDParameter);
        }
    }
}
